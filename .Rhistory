myFile <- read.csv(file.choose())
install.packages("ggplot2")
ggplot(data = myFile, aes(x=carat, y=price)) + geom_point()
install.packages("ggplot2")
ggplot(data = myFile, aes(x=carat, y=price)) + geom_point()
result <- 0
input <- readline("Enter value of n ie the sample size to check law of large numbers")
while(input > 0)
{
check <- rnorm(1)
if(check <= 1 & check >= -1)
{
result <- result + 1
}
input <- input - 1
}
answer <- (result/input1)*100
answer
?ggplot()
install.packages("ggplot2")
?ggplot()
?ggplot()
?ggplot()
library(ggplot2)
?ggplot()
?plyr()
?ggplot()
?diamonds()
hist(diamonds)
hist(diamonds.price)
hist(diamonds->price)
revenue <- c(14574.49, 7606.46, 8611.41, 9175.41, 8058.65, 8105.44, 11496.28, 9766.09, 10305.32, 14379.96, 10713.97, 15433.50)
expenses <- c(12051.82, 5695.07, 12319.20, 12089.72, 8658.57, 840.20, 3285.73, 5821.12, 6976.93, 16618.61, 10054.37, 3803.96)
monthly_profit <- revenue - expenses
monthly_profit
profit_after_tax <- 0.7 * monthly_profit
profit_after_tax
profit_after_tax
profit_margin <- profit_after_tax / revenue
profit_margin
profit_margin
mean(profit_after_tax)
?append
for(i in profit_after_tax)
{
if(i > mean(profit_after_tax))
append(good_months, i)
else
append(bad_months, i)
}
good_months <- c(NA, 12)
bad_months <- c(NA, 12)
for(i in profit_after_tax)
{
if(i > mean(profit_after_tax))
append(good_months, i)
else
append(bad_months, i)
}
good_months
good_months <- c(NA, 0)
bad_months <- c(NA, 0)
for(i in profit_after_tax)
{
if(i > mean(profit_after_tax))
append(good_months, i)
else
append(bad_months, i)
}
good_months
good_months <- 0
bad_months <- 0
for(i in profit_after_tax)
{
if(i > mean(profit_after_tax))
append(good_months, i)
else
append(bad_months, i)
}
good_months
monthly_profit <- revenue - expenses
monthly_profit
profit_after_tax <- 0.7 * monthly_profit
profit_after_tax
profit_margin <- profit_after_tax / revenue
profit_margin
good_months <- 0
bad_months <- 0
for(i in profit_after_tax)
{
if(i > mean(profit_after_tax))
append(good_months, i)
else
append(bad_months, i)
}
good_months
install.packages("tm")
df<- data.frame(runif(3), runif(3))
head(df)
?names()
names(df)
getwd()
setwd("C:\Users\Rahul\Desktop\R Programming\Kirill---Advanced-Analytics-In-R-For-Data-Science")
setwd("C://Users//Rahul//Desktop//R Programming//Kirill---Advanced-Analytics-In-R-For-Data-Science")
getwd()
getwd()
fin <- read.csv(file.choose())
fin <- read.csv(file.choose())
head(fin, 10)
head(fin, 10)
head(fin, 10)
tail(fin, 20)
tail(fin, 20)
str(fin)
summary(fin)
fin$ID <- factor(fin$ID)
fin$Inception <- factor(fin$Inception)
summary(fin)
str(fin)
ex1 <- ("Hello", "my", "name", "is", "khan", "oh", "my", "my")
ex1 <- c("Hello", "my", "name", "is", "khan", "oh", "my", "my")
ex1
typeof(ex1)
#----------- Converting this to a R factor (cause that is what will happen when you'll import such data!!!)-----------
ex1 <- factor(ex1)
typeof(ex1)
ex1
summary(ex1)
str(ex1)
#------------To convert this ex1 from factor to normal double or integer...we'll do the following-------------------
ex2 <- as.numeric(ex1)
ex2
#------------To convert this ex1 from factor to normal double or integer...we'll do the following-------------------
ex2 <- as.character(ex1)
ex2
#---------------------Now, try something different shall we---------------------------------------------------
ex3 <- c("14", "12", "13", "14", "12", "12")
ex3
ex4 <- as.numeric(ex3)
ex4
ex3 <- factor(ex3)
ex3
typeof(ex3)
ex5 <- as.numeric(ex3)
ex5
ex5 <- as.numeric(as.character(ex3))
ex5
#-------------------That's it...Thank You!!---------------------------------
head(fin)
fin$Expenses <- gsub(" Dollars", "", fin$Expenses)
head(fin, 10)
head(fin, 10)
fin$Expenses <- gsub(",", "", fin$Expenses)
head(fin, 10)
fin$Revenue <- gsub(",", "", find$Revenue)
fin$Revenue <- gsub(",", "", fin$Revenue)
fin$Revenue <- gsub("//$", "", fin$Revenue)
head(fin, 20)
fin$Revenue <- gsub("/$", "", fin$Revenue)
head(fin, 20)
fin$Revenue <- gsub("\\$", "", fin$Revenue)
fin$Revenue <- gsub("\\$", "", fin$Revenue)
head(fin, 20)
fin$Growth <- gsub("%", "", fin$Growth)
head(fin, 20)
tail(fin, 20)
head(fin, 24)
fin[-complete.cases(fin), ]
fin[!complete.cases(fin), ]
# This was basic import: fin <- read.csv(file.choose())
fin <- read.csv("P3-Future-500-The-Dataset.csv", na.strings = "")
head(fin, 10)
tail(fin, 20)
str(fin)
summary(fin)
fin$ID <- factor(fin$ID)
fin$Inception <- factor(fin$Inception)
#---------------------------Learning to deal with Factor Value Trap(FVT)--------------------------------------
ex1 <- c("Hello", "my", "name", "is", "khan", "oh", "my", "my")
ex1
typeof(ex1)
#----------- Converting this to a R factor (cause that is what will happen when you'll import such data!!!)-----------
ex1 <- factor(ex1)
typeof(ex1)
ex1
summary(ex1)
str(ex1)
#------------To convert this ex1 from factor to normal double or integer...we'll do the following-------------------
ex2 <- as.character(ex1)
ex2
#---------------------Now, try something different shall we---------------------------------------------------
ex3 <- c("14", "12", "13", "14", "12", "12")
ex3
ex4 <- as.numeric(ex3)
ex4 #-------------Yaaay----------------
ex3 <- factor(ex3)
ex3
typeof(ex3)
ex5 <- as.numeric(ex3)
ex5    #-------------Hawwww, yaha to kata hai apna!!-----------------------
ex5 <- as.numeric(as.character(ex3))
ex5
#-------------------That's it...Thank You!!---------------------------------
head(fin)
#-----------Coming back to our dataset, the reason Revenue, Expenses and Growth are not recognised as integers is beacuse of $, % and Dollars..So, we'll replace that-----------------
fin$Expenses <- gsub(" Dollars", "", fin$Expenses)
fin$Expenses <- gsub(",", "", fin$Expenses)
head(fin, 10)
fin$Revenue <- gsub(",", "", fin$Revenue)
fin$Revenue <- gsub("\\$", "", fin$Revenue)
head(fin, 20)
fin$Growth <- gsub("%", "", fin$Growth)
head(fin, 20)
tail(fin, 20)
head(fin, 24)
fin[!complete.cases(fin), ]
fin[where(fin$Profit == NA), ]
fin[where(fin$Profit == 7910473), ]
fin[which(fin$Profit == NA),]
fin[fin$Profit == NA,]
fin[is.na(fin$Expenses),]
fin_backup <- fin
fin_backup
fin[!complete.cases(fin$Industry)]
fin[!complete.cases(fin$Industry), ]
fin[is.na(fin$Industry)]
fin[is.na(fin$Industry), ]
fin[!is.na(fin$Industry), ]
fin <- fin[!is.na(fin$Industry), ]
head(fin, 20)
fin[!complete.cases(fin), ]
nrows(fin[!complete.cases(fin$Industry), ])
nrow(fin[!complete.cases(fin$Industry), ])
ncol(fin[!complete.cases(fin$Industry), ])
fin_backup1 <- fin
rownames(fin) <- 1: nrow(fin)
fin
fin[is.na(fin$State), ]
fin[is.na(fin$State) & "City" == "New York", ]
fin[is.na(fin$State) & fin$City == "New York", ]
fin[is.na(fin$State) & fin$City == "New York", "State"]
fin[is.na(fin$State) , "State"]
fin[is.na(fin$State) & fin$City == "New York", "State"] <- "NY"
head(fin)
fin[is.na(fin$State), ]
fin[is.na(fin$State) & fin$City == "San Francisco", "State"] <- "CA"
fin[is.na(fin)]
fin[is.na(fin), ]
head(fin)
fin[is.na(fin), ]
fin[!complete.cases(fin), ]
median_emp_retail <- median(fin[fin$Industry == "Retail","Employee"], na.rm = TRUE)
median_emp_retail
median_emp_retail <- median(fin[fin$Industry == "Retail","Employees"], na.rm = TRUE)
median_emp_retail
median_emp_finserv <- median(fin[fin$Industry == "Financial Services", "Employees"], na.rm = TRUE)
median_emp_finserv
fin[is.na(fin$Employees) & fin$Industry == "Retail", "Employees"] <- median_emp_retail
fin[is.na(fin$Employees) & fin$Industry == "Financial Services","Employees"] <- median_emp_finserv
fin[c(3,330), ]
#-----------------------------------Median imputation for Growth, Revenue and Expenses---------------------------------------------------------------------------------------
fin[!complete.cases(fin), ]
median_growth_const <- median(fin[fin$Industry == "Construction","Growth"], na.rm = TRUE)
median_growth_const
median_growth_const
median_growth_const
#-----------------------------------Median imputation for Growth, Revenue and Expenses---------------------------------------------------------------------------------------
fin[!complete.cases(fin), ]
median_growth_const <- median(fin[fin$Industry == "Construction","Growth"], na.rm = TRUE)
median_growth_const
fin[c(3,330), ]
median_emp_retail
median_emp_finserv
a <- median(fin[fin$Industry == "Construction","Growth"], na.rm = TRUE)
a
#-----------------------------------Median imputation for Growth, Revenue and Expenses---------------------------------------------------------------------------------------
fin[!complete.cases(fin)]
#-----------------------------------Median imputation for Growth, Revenue and Expenses---------------------------------------------------------------------------------------
fin[!complete.cases(fin), ]
median_growth_const <- median(fin$Growth)
median_growth_const
median_growth_const <- median(fin[ ,"Growth"], na.rm = TRUE)
median_growth_const
median_growth_const <- median(fin[fin$Industry == "Construction" ,"Growth"], na.rm = TRUE)
median_growth_const
head(fin, 200)
View(fin_backup)
median_growth_const <- median(fin_backup[fin_backup$Industry == "Construction" ,"Growth"], na.rm = TRUE)
median_growth_const
#-----------------------------------Median imputation for Growth, Revenue and Expenses---------------------------------------------------------------------------------------
fin[!complete.cases(fin), ]
med_growth_constr <- median(fin[fin$Industry == "Construction", "Growth"], na.rm = TRUE)
med_growth_constr
fin[is.na(fin$Growth) & fin$Industry == "Construction", "Growth" ] <- med_growth_constr
fin[8, ]
fin[!complete.cases(fin), ]
median_revenue_const <- median(fin[fin$Industry == "Construction", "Revenue"], na.rm = TRUE)
median_revenue_const
median_revenue_const <- median(fin[fin$Industry == "Construction", "Revenue"], na.rm = TRUE)
median_revenue_const
View(fin)
View(fin)
